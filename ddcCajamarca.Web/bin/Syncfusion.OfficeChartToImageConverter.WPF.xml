<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Syncfusion.OfficeChartToImageConverter.Wpf</name>
    </assembly>
    <members>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ChartCommon">
            <summary>
            It's assign the Excel Chart properties to SfChart.
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon.DEF_BORDER_WIDTH_EXCEL">
            <summary>
            Border width constant in MS EXCEL
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_XML">
            <summary>
            Represents the default line thickness in XML workbook
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon.DEF_LINE_THICKNESS_BINARY">
            <summary>
            Represents the default line thickness in Binary workbook
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon.parentWorkbook">
            <summary>
            Parent workbook internal object
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon.m_def_MarkerType_Array">
            <summary>
            Represents the marker type value in integer
            from enum ExcelChartType (XlsIO) and OfficeChartType (OfficeChart)
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartCommon._colorFormatPattern">
            <summary>
            Defines the pattern of color number format extracting
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.NumericalAxisBoundChanged(System.Object,Syncfusion.UI.Xaml.Charts.ChartAxisBoundsEventArgs)">
            <summary>
            Method triggered when the numerical axis bound changed 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetLabelTemplate(Syncfusion.OfficeChart.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Return the Label Template for Axis 
            </summary>
            <param name="chartAxisImpl">input chart axis</param>
            <returns>the custom template created from the input</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfGridLines(Syncfusion.OfficeChart.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis gridline settings to Sf chart axis gridline
            </summary>
            <param name="xlsioAxis">XlsIO axis.</param>
            <param name="sfAxis">Sf axis.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfPrimaryAxis(Syncfusion.UI.Xaml.Charts.CategoryAxis,Syncfusion.OfficeChart.Implementation.Charts.ChartCategoryAxisImpl,Syncfusion.OfficeChart.Implementation.Charts.ChartValueAxisImpl)">
             <summary>
             It's assign the Excel chart category axis settings to Sf chart Axis
             </summary>
            <param name="sfCatAxis">Sfchart category axis</param>
            <param name="xlsioCatAxis">XlsIO category axis</param>
            <param name="xlsioValAxis">XlsIO Value axis</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.OnAxisLabelCreated(System.Object,Syncfusion.UI.Xaml.Charts.LabelCreatedEventArgs)">
            <summary>
            Invoked after axis label crated.
            </summary>
            <param name="sender">Chart axis.</param>
            <param name="labelCreatedEventArgs">Chart label args.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfLogerthmicAxis(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It's assign the Excel chart Logerthmi axis settings to Sf chart Axis
            </summary>
            <param name="sfchart">SfChart</param>
            <param name="xlsioChart">Excel Chart</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfPrimaryDateAxis(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It's assign the Excel chart DateAxis settings to Sf chart Axis
            </summary>
            <param name="sfchart">SfChart</param>
            <param name="xlsioChart">Excel Chart</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfTickLines(Syncfusion.OfficeChart.Implementation.Charts.ChartAxisImpl,Syncfusion.UI.Xaml.Charts.ChartAxis)">
            <summary>
            It's assign the Excel chart axis tick line settings to Sf chart axis tick line
            </summary>
            <param name="xlsioAxis"></param>
            <param name="sfAxis"></param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfAxisTitle(Syncfusion.UI.Xaml.Charts.RangeAxisBase,Syncfusion.UI.Xaml.Charts.ChartAxis,Syncfusion.OfficeChart.IOfficeChartValueAxis,Syncfusion.OfficeChart.IOfficeChartCategoryAxis)">
            <summary>
            It's assign the Excel chart AxisTitle settings to Sf chart AxisTitle
            </summary>
            <param name="sfseco">SfChart Secondary Axis</param>
            <param name="sfprim">SfChart Primary Axis</param>
            <param name="xlsioValue">XlsIO Value Axis</param>
            <param name="xlsioCat">XlsIO Category Axis</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetAxisLayoutTransformForTitle(Syncfusion.OfficeChart.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Get the rotation angle from the axis and returns proper transform
            </summary>
            <param name="axis">Input Chart Axis</param>
            <returns>the layout transform</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.IsVerticalAxis(Syncfusion.OfficeChart.Implementation.Charts.ChartAxisImpl)">
            <summary>
            Check whether the axis is vertical or not 
            </summary>
            <param name="axis">axis to be checked</param>
            <returns>the boolean value, is vertical or not</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfLegend(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It's assign Sf chart Legend settings
            </summary>
            <param name="sfchart">SfChart</param>
            <param name="xlsioChart">Excel Chart</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfTextBlock(System.Windows.Controls.TextBlock,Syncfusion.OfficeChart.IOfficeChartTextArea)">
            <summary>
            It's used assign the XlsIo textarea properties to sf TextBlock
            </summary>
            <param name="sfTextArea">Wpf TextBlock</param>
            <param name="textArea">Xlsio Text Area</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfChartTitle(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It's assign the SfChart AxisTitle properties
            </summary>
            <param name="sfchart">sfChart</param>
            <param name="xlsioChart">Xlsio Chart</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfChartDataLabel(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            It's assign the chart data label property
            </summary>
            <param name="serie">chart serie</param>
            <param name="sfChartSeries">Sfchart serie base object</param>
            <returns>sfChart DataLabel</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetNumberFormatColorConverter(System.String,System.Drawing.Color)">
            <summary>
            Returns the color converter object respect to number format
            </summary>
            <param name="numberFormat">input number format</param>
            <param name="defaultColor">input default color</param>
            <returns>the color converter object</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetColor(System.String)">
            <summary>
            Returns the color value from the input value name
            </summary>
            <param name="colorName">the color name</param>
            <returns>the output color value</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetColorGroup(System.String)">
            <summary>
            Returns the character respect to color group
            </summary>
            <param name="groupName">input group name</param>
            <returns>the respective character value</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfColor(System.Drawing.Color)">
            <summary>
            It's convert the drawing color to Media color
            </summary>
            <param name="chartcolor">Drawing color</param>
            <returns>Media color</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfPloatArea(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.Implementation.Charts.ChartFrameFormatImpl)">
            <summary>
            It's assign the chart plotArea settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfChartArea(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.Implementation.Charts.ChartFrameFormatImpl)">
            <summary>
            It's assign the chartAre settings
            </summary>
            <param name="sfChart">sfChart</param>
            <param name="chartArea">XlsiO chartArea</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.IsLine(Syncfusion.OfficeChart.OfficeChartType)">
            <summary>
            Checks whether the given chart type is line or not
            </summary>
            <param name="chartType">Chart Type</param>
            <returns>boolean value</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfChartTrendLine(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.CartesianSeries)">
            <summary>
            Add the trendlines to sfserie.
            </summary>
            <param name="serieImpl">XlsIO serie.</param>
            <param name="sfSerie">SfSerie.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfSecondaryAxis(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart,Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Set SfChart secondary axis settings.
            </summary>
            <param name="xlsioSerie">XlsIO serie.</param>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="chartSerie">SfChart serie.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SfSecondaryAxisCommon(Syncfusion.OfficeChart.IOfficeChart,Syncfusion.UI.Xaml.Charts.ChartAxisBase2D,Syncfusion.UI.Xaml.Charts.RangeAxisBase)">
            <summary>
            Set SfChart secondary axis common settings.
            </summary>
            <param name="xlsioChart">XlsIO chart.</param>
            <param name="sfXAxis">SfCategory axis.</param>
            <param name="sfYAxis">SfNumeric axis.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetSerieName(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Get series name.
            </summary>
            <param name="serie">XlsIO chart series.</param>
            <returns>returns series name.</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetStrokeDashArrayValues(System.Int16,System.Windows.Media.DoubleCollection@)">
            <summary>
            Get the stroke pattern value from the border property
            </summary>
            <param name="LinePatternFlag">Input border pattern property</param>
            <param name="patternValues">Out stroke thickness</param>
            <returns>boolean value indicates whether the pattern values are present or not</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.SetGapWidthandOverlap(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl)">
            <summary>
            Set GapWidth and Overlap for bar and column series.
            </summary>
            <param name="seriesBase">SfChart series base.</param>
            <param name="serie">XlsIO serie.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetBorderThickness(Syncfusion.OfficeChart.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the border thickness from the input border
            </summary>
            <param name="border">input Border</param>
            <returns>the border thickness value</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetMarkerSymbol(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieDataFormatImpl,System.Int32)">
            <summary>
            Return the approximate marker symbol for the chart serie
            </summary>
            <param name="dataFormat">Input serie Data format</param>
            <param name="serieIndex">integer value for auto marker type</param>
            <returns>the approimate chart marker symbol value</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetBrushFromBorder(Syncfusion.OfficeChart.Implementation.Charts.ChartBorderImpl)">
            <summary>
            Get the brush value from input border values
            </summary>
            <param name="border">input border value</param>
            <returns>the output brush</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetBrushFromDataFormat(Syncfusion.OfficeChart.IOfficeChartFillBorder)">
            <summary>
            get the brush with color and transparent values from input chartseriedataformat
            </summary>
            <param name="fillFormat">the input chartseriedataformat</param>
            <returns>the brush</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartCommon.GetMaxGradientStop(Syncfusion.OfficeChart.Implementation.Shapes.GradientStops)">
            <summary>
            Get the maximum gradient style used from the input chart
            </summary>
            <param name="gradientStops">input gardient stop collection</param>
            <returns>maximum used gradient stop</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfBarseries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">xlsio chart</param>
            <returns>BarSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfAreaSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfArea Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>AreaSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfColumnSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfColumn Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>ColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfLineSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfLine Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>LineSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfSplineSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfSpline Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>SplineSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfPieSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfPie Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>PieSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfDoughnutSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfDoughnut Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>DoughnutSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackAreaSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingArea Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingAreaSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackBarSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingBar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBarSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackedColumnSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingColumn Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumnSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackColum100Series(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingColumn100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingColumn100Series</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackArea100Series(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingArea100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingArea100Series</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStackBar100Series(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfStackingBar100 Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>StackingBar100Series</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfRadarSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfRadar Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>RadarSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfScatterrSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfScatter Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>ScatterSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfBubbleSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfBubble Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>BubbleSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfCandleSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfCandle Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>CandleSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.SfStockHiLoSeries(Syncfusion.OfficeChart.IOfficeChartSerie,Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            It returns the SfHiLo Serie.
            </summary>
            <param name="serie">chart serie</param>
            <param name="xlsioChart">Xlsio chart</param>
            <returns>HiLoOpenCloseSeries</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.CheckAndGetViewModel(Syncfusion.OfficeChart.IOfficeChartSerie,System.Boolean@)">
            <summary>
            Check for series having reference or literal values and return view model object based on values type
            </summary>
            <param name="serie">input series need to check</param>
            <param name="isDirectValues">boolean value denotes series values are literal or not</param>
            <returns>view model object</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetChartPointsValues(Syncfusion.OfficeChart.IOfficeChartSerie,System.Boolean,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.OfficeChartToImageConverter.ChartPoint},System.Boolean@)">
            <summary>
            Get the chartpoints from the series values
            </summary>
            <param name="serie">input series</param>
            <param name="isDirectValues">boolean value represents is literal or reference type of serie values</param>
            <param name="isBubbles">boolean value denotes whether serie is bubble or not</param>
            <param name="values">input chart points to be updated</param>
            <param name="hasEmptyPoints">boolean value denotes whether to show empty points or not</param>
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.UpdateChartPointsByDisplayUnit(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl,System.Collections.ObjectModel.ObservableCollection{Syncfusion.OfficeChartToImageConverter.ChartPoint})">
            <summary>
            Update point value based on diplay unit.
            </summary>
            <param name="serie">Chart serie.</param>
            <param name="chartPoints">Chart points.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetDiaplayUnitValue(Syncfusion.OfficeChart.Implementation.Charts.ChartValueAxisImpl)">
            <summary>
            Gets the dipaly unit numerical value.
            </summary>
            <param name="valueAxisImpl">Chart value axis.</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.CheckAndGetBubbleValues(Syncfusion.OfficeChart.IRange,System.Object[],System.Int32)">
            <summary>
            Check and assign bubble values for size of chart points 
            </summary>
            <param name="bubbleRange">input bublle ranges for chart point sizes</param>
            <param name="directbubbleValues"></param>
            <param name="index">index of the value to return</param>
            <returns>the Size Value of chart Point</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.CheckAndGetCategoryValues(Syncfusion.OfficeChart.Implementation.Charts.ChartImpl,Syncfusion.OfficeChart.IRange[],System.Object[],System.Int32,System.Boolean)">
            <summary>
            Check and assign X value for a chart point from ranges or values
            </summary>
            <param name="chart">XlsIO chart</param>
            <param name="categoryRanges">Reference ranges for X values</param>
            <param name="directCategories">Literal values for X Values</param>
            <param name="index">index of the value to return</param>
            <param name="applyNumberFormat">Boolean value indicates whether the number format to be applied or not</param>
            <returns>the X Value of chart Point</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetChartPointsValuesForStockChart(Syncfusion.OfficeChart.IOfficeChart,Syncfusion.OfficeChart.IOfficeChartSerie,System.Boolean,System.Collections.ObjectModel.ObservableCollection{Syncfusion.OfficeChartToImageConverter.ChartPoint},System.Boolean)">
            <summary>
            Get the chartpoints from the series values only for stock chart
            </summary>
            <param name="chart">XlsIO chart</param>
            <param name="serie">input series</param>
            <param name="isDirectValues">boolean value represents is literal or reference type of serie values</param>
            <param name="values">input chart points to be updated</param>
            <param name="isCandleChart">boolean value represent the candle chart</param>
            <returns>the updated chart point collection</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetFillOnCommonSeries(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase)">
            <summary>
            Assign the brush values for the common chart series
            like (Bar,column,Area(stacked or 100%stacked or clustered)),Bubble,
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.TryParseNegativeIndexes(Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            Gets the index of negative values serie data points. 
            </summary>
            <param name="sfChartSerie">SfChart serie.</param>
            <param name="listIndexes">Index collection.</param>
            <returns>returns true if serie data points has negative value otherwise false.</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetFillOnPieDougnutSeries(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeriesBase,System.Boolean)">
            <summary>
            Assign the brush values for the pie and doughnut chart series
            </summary>
            <param name="serie">input Chart series</param>
            <param name="sfChartSerie">the ouput SfChart Serie object to be changed</param>
            <param name="isPie">Indicates whether the input serie is pie or doughnut</param>
            <returns>the boolean value indicates whether the all datapoints have no fill</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetBorderOnCommonSeries(Syncfusion.OfficeChart.Implementation.Charts.ChartBorderImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
            <summary>
            Get the border thickness and color value from input border
            Set the values to the output serie
            </summary>
            <param name="border">the input series border</param>
            <param name="sfChartSerie">the ouput series to be changed</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetBorderOnLineSeries(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieImpl,Syncfusion.UI.Xaml.Charts.ChartSeries)">
             <summary>
             Get the border thickness and color value from input border
             Set the values to the output serie
             </summary>
            <param name="serieImpl">Input series</param>
             <param name="sfChartSerie">the ouput series to be changed</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.GetChartSeries.GetChartLegendIcon(Syncfusion.OfficeChart.Implementation.Charts.ChartSerieDataFormatImpl,System.Int32)">
            <summary>
            Return the approximate legend icon for the chart serie
            </summary>
            <param name="dataFormat">Input serie Data format</param>
            <param name="serieIndex">integer value for auto marker type</param>
            <returns>the approimate chart legend icon value</returns>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ChartSeriesFactory">
            <summary>
            Create sf chart series based on type.
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartSeriesFactory.CreateSeries(System.Type)">
            <summary>
            Create sf chart series.
            </summary>
            <param name="type">SfChart series type.</param>
            <returns>Returns sf chart series instance.</returns>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.NamespaceDoc">
            <summary>
            The Syncfusion.OfficeChartToImageConverter namespace contains classes for converting Office charts into image.
            </summary>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter">
            <summary>
            Excel Chart To Image Converter.
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter._chart">
            <summary>
            To assign the input chart
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.m_scalingMode">
            <summary>
            Represent the quality of Image
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.GetChartStream(System.Object)">
            <summary>
            Assign the Sfchart Stream to input stream
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.GetChart(Syncfusion.OfficeChart.IOfficeChart)">
            <summary>
            Excel chart to sf Chart conversion.
            </summary>
            <param name="excelChart">Excel chart</param>
            <returns>SfChart</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.SetAxisReplacement(Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChart,System.Boolean@)">
            <summary>
            Check For any need of axis replacement respect to its values
            </summary>
            <param name="sfChart">input sfchart object</param>
            <param name="chart">input xlsio / office chart object</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.AddTickMarks(Syncfusion.UI.Xaml.Charts.SfChart,System.Double,System.Double,System.Int32,System.Windows.Media.Brush,System.Double,System.Boolean)">
            <summary>
            Add the line annotation like major and minor tick mark in the chart
            </summary>
            <param name="sfChart">input sfchart</param>
            <param name="Y1Value">Y1 position value</param>
            <param name="Y2Value">Y2 position value</param>
            <param name="interval">Interval between tickmarks</param>
            <param name="axisLineColor">color of tick marks</param>
            <param name="thickness">thickness of tickmark</param>
            <param name="isMajor">boolean value indicates whether tick mark is major or minor</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.SaveAsImage(Syncfusion.OfficeChart.IOfficeChart,System.IO.Stream)">
            <summary>
            Excel chart to sf Chart conversion.
            </summary>
            <param name="excelChart">Excel chart</param>
            <param name="imageAsStream">Output Stream</param>
            <returns>SfChart</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.Save(Syncfusion.UI.Xaml.Charts.SfChart,System.Object)">
            <summary>
            Sfchart element is save as to image stream.
            </summary>
            <param name="sfchart">Sfchart Element</param>
            <param name="stream">output Stream</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.Rendered(System.Windows.Media.Visual,System.Windows.Size,System.Object)">
            <summary>
            Sf chart is rendered and save as to stream
            </summary>
            <param name="visual">Sfchart element</param>
            <param name="size">sf chart size</param>
            <param name="stream">output Stream</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.GetRenderTargetBitmap(System.Windows.Size)">
            <summary>
            Get RenderTargetBitmap object.
            </summary>        
            <param name="size">sf chart size</param>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.GetChartSerie(Syncfusion.OfficeChart.OfficeChartType,Syncfusion.UI.Xaml.Charts.SfChart,Syncfusion.OfficeChart.IOfficeChartSerie,System.Boolean@,System.Boolean@)">
            <summary>
            Get Sf chart serie for Excel Chart serie
            </summary>
            <param name="serieType">Represent the Series Type</param>
            <param name="sfChart">Sfchart</param>
            <param name="serie">Excel Serie</param>
            <param name="isPie">ispie boolean for piechart</param>
            <param name="isStock">isstock boolean for stockchart</param>
        </member>
        <member name="P:Syncfusion.OfficeChartToImageConverter.ChartToImageConverter.ScalingMode">
            <summary>
            It's represent the chart image Scaling 
            </summary>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ViewModel">
            <summary>
            It's an chart data source. Collection of datapoint's.
            </summary>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ChartPoint">
            <summary>
            It's represent the chart datapoint.
            </summary>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.LabelConvertor">
            <summary>
            Converts the data label values.
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.LabelConvertor.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.LabelConvertor.ApplyNumberFormat(System.Object)">
            <summary>
            Apply a number format to value.
            </summary>
            <param name="value">Value.</param>
            <returns>returns numberformat applied string.</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.LabelConvertor.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.ColorConverter">
            <summary>
            Converts the Color respect to the data
            </summary>
        </member>
        <member name="F:Syncfusion.OfficeChartToImageConverter.ColorConverter.Brushes">
            <summary>
            Retruns the brush respect to the input value on numberformat
            Possible Keys are,
            ['0'] => denotes the color for zero value
            ['+'] => denotes the color for positive value
            ['-'] => denotes the color for negative value
            ['d'] => denotes the color for Default value
            </summary>
        </member>
        <member name="T:Syncfusion.OfficeChartToImageConverter.AxisLabelConverter">
            <summary>
            Converts the input data to axis data
            </summary>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.AxisLabelConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
            <returns></returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.AxisLabelConverter.ApplyNumberFormat(System.Object)">
            <summary>
            Apply a number format to value.
            </summary>
            <param name="value">Value.</param>
            <returns>returns numberformat applied string.</returns>
        </member>
        <member name="M:Syncfusion.OfficeChartToImageConverter.AxisLabelConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Convets a value.
            </summary>
            <param name="value">Value</param>
            <param name="targetType">Target type</param>
            <param name="parameter">The converter parameter</param>
            <param name="culture">Culture</param>
        </member>
    </members>
</doc>
